// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const framework = flutter_sdk.src__widgets__framework;
  const app = flutter_sdk.src__material__app;
  const scaffold = flutter_sdk.src__material__scaffold;
  const app_bar = flutter_sdk.src__material__app_bar;
  const text = flutter_sdk.src__widgets__text;
  const basic = flutter_sdk.src__widgets__basic;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const colors = flutter_sdk.src__material__colors;
  const card = flutter_sdk.src__material__card;
  const flex = flutter_sdk.src__rendering__flex;
  const text_style = flutter_sdk.src__painting__text_style;
  const list_tile = flutter_sdk.src__material__list_tile;
  const radio = flutter_sdk.src__material__radio;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const binding = flutter_sdk.src__widgets__binding;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var $toString = dartx.toString;
  var $length = dartx.length;
  var $_get = dartx._get;
  var $entries = dartx.entries;
  var $asMap = dartx.asMap;
  var $_set = dartx._set;
  var $map = dartx.map;
  var $toList = dartx.toList;
  var $contains = dartx.contains;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    JSArrayOfQuestion: () => (T.JSArrayOfQuestion = dart.constFn(_interceptors.JSArray$(main.Question)))(),
    intN: () => (T.intN = dart.constFn(dart.nullable(core.int)))(),
    JSArrayOfintN: () => (T.JSArrayOfintN = dart.constFn(_interceptors.JSArray$(T.intN())))(),
    ListOfintN: () => (T.ListOfintN = dart.constFn(core.List$(T.intN())))(),
    RadioOfint: () => (T.RadioOfint = dart.constFn(radio.Radio$(core.int)))(),
    intNTovoid: () => (T.intNTovoid = dart.constFn(dart.fnType(dart.void, [T.intN()])))(),
    MapEntryOfint$String: () => (T.MapEntryOfint$String = dart.constFn(core.MapEntry$(core.int, core.String)))(),
    MapEntryOfint$StringToListTile: () => (T.MapEntryOfint$StringToListTile = dart.constFn(dart.fnType(list_tile.ListTile, [T.MapEntryOfint$String()])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    BuildContextAndintToCard: () => (T.BuildContextAndintToCard = dart.constFn(dart.fnType(card.Card, [framework.BuildContext, core.int])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    }
  }, false);
  var C = [void 0];
  var I = ["file:///zapp/project/lib/main.dart"];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  var title$ = dart.privateName(main, "Question.title");
  var options$ = dart.privateName(main, "Question.options");
  var answerIndex$ = dart.privateName(main, "Question.answerIndex");
  var selectedOption = dart.privateName(main, "Question.selectedOption");
  main.Question = class Question extends core.Object {
    get title() {
      return this[title$];
    }
    set title(value) {
      this[title$] = value;
    }
    get options() {
      return this[options$];
    }
    set options(value) {
      this[options$] = value;
    }
    get answerIndex() {
      return this[answerIndex$];
    }
    set answerIndex(value) {
      this[answerIndex$] = value;
    }
    get selectedOption() {
      return this[selectedOption];
    }
    set selectedOption(value) {
      this[selectedOption] = value;
    }
    static ['_#new#tearOff'](opts) {
      let title = opts && 'title' in opts ? opts.title : null;
      let options = opts && 'options' in opts ? opts.options : null;
      let answerIndex = opts && 'answerIndex' in opts ? opts.answerIndex : null;
      return new main.Question.new({title: title, options: options, answerIndex: answerIndex});
    }
  };
  (main.Question.new = function(opts) {
    let title = opts && 'title' in opts ? opts.title : null;
    let options = opts && 'options' in opts ? opts.options : null;
    let answerIndex = opts && 'answerIndex' in opts ? opts.answerIndex : null;
    this[title$] = title;
    this[options$] = options;
    this[answerIndex$] = answerIndex;
    this[selectedOption] = -1;
    ;
  }).prototype = main.Question.prototype;
  dart.addTypeTests(main.Question);
  dart.addTypeCaches(main.Question);
  dart.setLibraryUri(main.Question, I[0]);
  dart.setFieldSignature(main.Question, () => ({
    __proto__: dart.getFields(main.Question.__proto__),
    title: dart.fieldType(core.String),
    options: dart.fieldType(core.List$(core.String)),
    answerIndex: dart.fieldType(core.int),
    selectedOption: dart.fieldType(core.int)
  }));
  main.QuizApp = class QuizApp extends framework.StatefulWidget {
    createState() {
      return new main._QuizAppState.new();
    }
    static ['_#new#tearOff']() {
      return new main.QuizApp.new();
    }
  };
  (main.QuizApp.new = function() {
    main.QuizApp.__proto__.new.call(this);
    ;
  }).prototype = main.QuizApp.prototype;
  dart.addTypeTests(main.QuizApp);
  dart.addTypeCaches(main.QuizApp);
  dart.setMethodSignature(main.QuizApp, () => ({
    __proto__: dart.getMethods(main.QuizApp.__proto__),
    createState: dart.fnType(main._QuizAppState, [])
  }));
  dart.setLibraryUri(main.QuizApp, I[0]);
  main._QuizAppState = class _QuizAppState extends framework.State$(main.QuizApp) {
    submitQuiz() {
      this.setState(dart.fn(() => {
        this.isQuizSubmitted = true;
      }, T.VoidTovoid()));
    }
    initState() {
      super.initState();
      this.selectedAnswers = T.ListOfintN().filled(this.questions[$length], null);
    }
    build(context) {
      return new app.MaterialApp.new({home: new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("Quiz App")}), body: new basic.Padding.new({padding: new edge_insets.EdgeInsets.all(16), child: new basic.Column.new({children: T.JSArrayOfWidget().of([new basic.Expanded.new({child: new scroll_view.ListView.builder({itemCount: this.questions[$length], itemBuilder: dart.fn((context, index) => {
                      let question = this.questions[$_get](index);
                      let isAnsweredCorrectly = this.isQuizSubmitted && this.selectedAnswers[$length] > index && this.selectedAnswers[$_get](index) === question.answerIndex;
                      let isAnsweredWrong = this.isQuizSubmitted && this.selectedAnswers[$length] > index && this.selectedAnswers[$_get](index) !== question.answerIndex;
                      let wrongAnswere = isAnsweredWrong ? colors.Colors.red : null;
                      return new card.Card.new({color: isAnsweredCorrectly ? colors.Colors.green : wrongAnswere, child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.all(16), child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new text.Text.new(question.title, {style: new text_style.TextStyle.new({fontWeight: ui.FontWeight.bold, fontSize: 16})}), new basic.SizedBox.new({height: 8}), new basic.Column.new({children: question.options[$asMap]()[$entries][$map](list_tile.ListTile, dart.fn(entry => {
                                  let optionIndex = entry.key;
                                  let optionText = entry.value;
                                  let isSelected = this.selectedAnswers[$length] > index && this.selectedAnswers[$_get](index) === optionIndex;
                                  return new list_tile.ListTile.new({title: new text.Text.new(optionText), leading: new (T.RadioOfint()).new({value: optionIndex, groupValue: this.selectedAnswers[$_get](index), onChanged: dart.fn(value => {
                                        this.setState(dart.fn(() => {
                                          this.selectedAnswers[$_set](index, value);
                                        }, T.VoidTovoid()));
                                      }, T.intNTovoid())}), tileColor: isSelected ? colors.Colors.grey : null});
                                }, T.MapEntryOfint$StringToListTile()))[$toList]()})])})})});
                    }, T.BuildContextAndintToCard())})}), new basic.SizedBox.new({height: 16}), new elevated_button.ElevatedButton.new({onPressed: this.selectedAnswers[$contains](null) ? null : dart.bind(this, 'submitQuiz'), child: new text.Text.new("Enviar")})])})})})});
    }
    static ['_#new#tearOff']() {
      return new main._QuizAppState.new();
    }
  };
  (main._QuizAppState.new = function() {
    this.questions = T.JSArrayOfQuestion().of([new main.Question.new({title: "Qual o melhor filme da franquia Carros?", options: T.JSArrayOfString().of(["Carros", "Carros 2 ", "Carros 3"]), answerIndex: 0}), new main.Question.new({title: "Qual o nome do patrocinador do Relampago McQueen?", options: T.JSArrayOfString().of(["Dinoco", "Rustezy", "htB"]), answerIndex: 1}), new main.Question.new({title: "Quantas copas pistão tem Relampago McQueen?", options: T.JSArrayOfString().of(["10", "5", "7"]), answerIndex: 2}), new main.Question.new({title: "Qual o nome da rota que da acesso a Radiator Springs?", options: T.JSArrayOfString().of(["76", "86", "66"]), answerIndex: 2}), new main.Question.new({title: "Porque Doc Hudson parou de correr?", options: T.JSArrayOfString().of(["Sofreu acidente", "Se aposentou ", "Foi Substituido"]), answerIndex: 2})]);
    this.selectedAnswers = T.JSArrayOfintN().of([]);
    this.isQuizSubmitted = false;
    main._QuizAppState.__proto__.new.call(this);
    ;
  }).prototype = main._QuizAppState.prototype;
  dart.addTypeTests(main._QuizAppState);
  dart.addTypeCaches(main._QuizAppState);
  dart.setMethodSignature(main._QuizAppState, () => ({
    __proto__: dart.getMethods(main._QuizAppState.__proto__),
    submitQuiz: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main._QuizAppState, I[0]);
  dart.setFieldSignature(main._QuizAppState, () => ({
    __proto__: dart.getFields(main._QuizAppState.__proto__),
    questions: dart.fieldType(core.List$(main.Question)),
    selectedAnswers: dart.fieldType(core.List$(dart.nullable(core.int))),
    isQuizSubmitted: dart.fieldType(core.bool)
  }));
  main.main = function main$0() {
    binding.runApp(new main.QuizApp.new());
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CI,IA1BF,iCAAgB;AACd,UAAoB,6BAGD;AAF8B,QAA9B,AAAkB,6BAElB,eAF2B;;AAEL,QAAF,CAApB;;AAEnB,UAAO,AAAQ,uBAAY;AAKvB,QAJK,AAAqC,qBAA7B,qCAAuB,uBAAW,QAAC;AAG9C,UAFC,AAAQ,sBAAW,2BAA2B,CAC/C;;;wBAIL,SAAC,GAAG;AACL,UAAO,AAAQ,uBAAY;AAIvB,QAHC,AAAQ,sBAAW,wBAAwB,CAC5C,AAAE,CAAD,eACD,AAAW,UAAD;;2DAGM,yCACb,SAAC,MAAM,QAAQ,MAAM;AAC1B,cAAO,AAAQ,uBAAY;AAC4B,YAAlD,AAAQ,sBAAW,wBAAwB,CAAC,IAAI;;;EAI3D;;AAEiB;AAQd,MAPD,MAAS,gCACC;AACS,UAAf;6CAEe;AACmB,UAAjB;;IAGvB;;;;;;;IChDS;;;;;;IACM;;;;;;IACT;;;;;;IACA;;;;;;;;;;;;;;QAEoB;QAAqB;QAAuB;IAA5C;IAAqB;IAAuB;IAC/C,uBAAE,CAAC;;EAAC;;;;;;;;;;;;;AAKM;IAAe;;;;;;;;EAChD;;;;;;;;;;AA0CM,MAFF,cAAS;AACe,QAAtB,uBAAkB;;IAEtB;;AAImB,MAAX;AACqD,MAA3D,uBAAkB,sBAAkB,AAAU,yBAAQ;IACxD;UAG0B;AACxB,YAAO,gCACC,mCACI,+BACC,kBAAK,qBAER,gCACgB,+BAAI,YACjB,gCACK,wBACR,+BACkB,6CACH,AAAU,sCACR,SAAc,SAAa;AAChC,qCAAW,AAAS,sBAAC,KAAK;AAC1B,gDAAsB,AACO,wBAA/B,AAAgB,AAAO,gCAAE,KAAK,IAC9B,AAAe,AAAQ,4BAAP,KAAK,MAAK,AAAS,QAAD;AAEhC,4CAAkB,AACW,wBAA/B,AAAgB,AAAO,gCAAE,KAAK,IAC9B,AAAe,4BAAC,KAAK,MAAK,AAAS,QAAD;AAChC,yCAAe,eAAe,GAAU,oBAAM,IAAhB;AAIpC,4BAAO,2BACE,mBAAmB,GAAU,sBAAQ,YAAlB,AAA8B,SACjD,gCACe,+BAAI,YACjB,0CACkC,yCAC7B,wBACR,kBACE,AAAS,QAAD,gBACD,0CACkB,8BACb,QAGd,gCAAiB,KACjB,gCACY,AAAS,AAAQ,AAAQ,AAAQ,AAqBzC,QArBgB,uDAChB,QAAC;AACO,oDAAc,AAAM,KAAD;AACnB,mDAAa,AAAM,KAAD;AAClB,mDAAa,AAAgB,AAAO,AAAQ,gCAAN,KAAK,IAC7C,AAAe,AAAQ,4BAAP,KAAK,MAAK,WAAW;AAEzC,wCAAO,oCACE,kBAAK,UAAU,YACb,iCACA,WAAW,cACN,AAAe,4BAAC,KAAK,cACtB,QAAM;AAGb,wCAFF,cAAS;AACuB,0CAA9B,AAAe,4BAAC,KAAK,EAAI,KAAK;;uEAIzB,UAAU,GAAU,qBAAO,IAAjB;;0DAY3C,gCAAiB,MACjB,mDACa,AAAgB,gCAAS,QAAQ,iBAAO,4BAC5C,kBAAK;IAO1B;;;;;;IAnIe,iBAAY,0BACzB,8BACS,oDACE,wBAAC,UAAU,aAAa,2BACpB,KAEf,8BACS,8DACE,wBAAC,UAAU,WAAW,sBAClB,KAGf,8BACS,wDACE,wBAAC,MAAM,KAAK,oBACR,KAGf,8BACS,kEACE,wBAAC,MAAM,MAAM,qBACT,KAGf,8BACS,+CACE,wBAAC,mBAAmB,iBAAiB,kCACjC;IAKN,uBAAkB;IAExB,uBAAkB;;;EAkGzB;;;;;;;;;;;;;;;;AAvJmB,IAAjB,eAAO;EACT;;ECGwB","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant
  };
}));

//# sourceMappingURL=main.js.map
